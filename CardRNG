local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "TatsumakiHub | CardRNG", HidePremium = false, IntroText = "TatsumakiHub", SaveConfig = true, ConfigFolder = "TatsuHub"})

-- Values
_G.autoRoll = true
_G.autoluckPotion = true
_G.autospeedPotion = true
_G.autocollectluckPotion = true
_G.autocollectluckPotionLoop = true
_G.autocollectspeedPotion = true
_G.autocollectspeedPotionLoop = true
_G.autoObby = true
_G.autobossPortal1 = true
_G.autobossPortal2 = true
_G.autobossPortal22 = true
_G.autobossPortal3 = true
_G.autobossPortal4 = true
_G.autobossPortal5 = true
_G.autobossPortal6 = true
_G.deleteUselessFolder = true
_G.deleteUselessParts = true
_G.deletePortals = true

-- Funcions

function autoRoll()
    while _G.autoRoll == true do
        game:GetService("ReplicatedStorage").Remotes.Roll:InvokeServer()
        wait(.1)
     end
end

function autoluckPotion()
    while _G.autoluckPotion == true do
        local args = {
            [1] = "Luck Potion"
        }
        
        game:GetService("ReplicatedStorage").Remotes.UsePotion:FireServer(unpack(args))
        wait(3)
    end
end    

function autospeedPotion()
    while _G.autospeedPotion == true do
        local args = {
            [1] = "Speed Potion"
        }
        
        game:GetService("ReplicatedStorage").Remotes.UsePotion:FireServer(unpack(args))
        wait(3)
    end
end    

function autocollectluckPotion()
    while _G.autocollectluckPotion == true do
        local player = game.Players.LocalPlayer

    local function moveToPart(part)
        if part then
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")

        -- Raycast to find a point slightly above the part
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
        raycastParams.FilterDescendantsInstances = {character}
        local result = workspace:Raycast(part.Position, Vector3.new(0, 1, 0), raycastParams)
        
        if result then
            local destination = result.Position + Vector3.new(0, 2, 0) -- Move slightly above the part
            humanoid:MoveTo(destination)
            humanoid.MoveToFinished:Wait()
            wait(0.1) -- Adjust this delay if necessary
            
            -- Check if the character is close enough to the part
            if (character.Head.Position - part.Position).Magnitude < 3 then
                part:Destroy()
            end
        end
    end
end

    local function moveToParts()
        local potionsFolder = game:GetService("Workspace").Potions
    if not potionsFolder then
        return
    end
    
    local targetParts = {
        potionsFolder:FindFirstChild("Luck Potion"),
        potionsFolder:FindFirstChild("Speed Potion"),
        -- Add more target parts here
    }

    for _, part in ipairs(targetParts) do
        moveToPart(part)
    end
end

moveToParts()
        wait(0.1)
    end
end    

function autocollectspeedPotion()
    while _G.autocollectspeedPotion == true do
        local New_CFrame = game:GetService("Workspace").Potions["Speed Potion"].CFrame

        local ts = game:GetService('TweenService')
        local char = game.Players.LocalPlayer.Character
        local part = char.HumanoidRootPart
        local ti = TweenInfo.new(8, Enum.EasingStyle.Linear) --How fast you go
        local tp = {CFrame = New_CFrame}
        
        ts:Create(part, ti, tp):Play()
        
        local function onTouched(hit)
            if hit:IsDescendantOf(game:GetService("Workspace").Potions["Speed Potion"]) then
                game:GetService("Workspace").Potions["Speed Potion"]:Destroy()
            end
        end
        
        part.Touched:Connect(onTouched) 

        wait(8.3)
    end
end 

function autocollectluckPotionLoop()
    while _G.autocollectluckPotionLoop == true do    
        local New_CFrame = game:GetService("Workspace").Potions["Luck Potion"].CFrame

        local ts = game:GetService('TweenService')
        local char = game.Players.LocalPlayer.Character
        local part = char.HumanoidRootPart
        local ti = TweenInfo.new(8, Enum.EasingStyle.Linear) --How fast you go
        local tp = {CFrame = New_CFrame}
        
        ts:Create(part, ti, tp):Play()
        
        local function onTouched(hit)
            if hit:IsDescendantOf(game:GetService("Workspace").Potions["Luck Potion"]) then
                game:GetService("Workspace").Potions["Luck Potion"]:Destroy()
            end
        end
        
        part.Touched:Connect(onTouched)
        wait(8.3)         
    end
end  

function autocollectspeedPotionLoop()
    while _G.autocollectspeedPotionLoop == true do    
        local New_CFrame = game:GetService("Workspace").Potions["Speed Potion"].CFrame

        local ts = game:GetService('TweenService')
        local char = game.Players.LocalPlayer.Character
        local part = char.HumanoidRootPart
        local ti = TweenInfo.new(8, Enum.EasingStyle.Linear) --How fast you go
        local tp = {CFrame = New_CFrame}
        
        ts:Create(part, ti, tp):Play()
        
        local function onTouched(hit)
            if hit:IsDescendantOf(game:GetService("Workspace").Potions["Speed Potion"]) then
                game:GetService("Workspace").Potions["Speed Potion"]:Destroy()
            end
        end
        
        part.Touched:Connect(onTouched)
        wait(8.3)
    end    
end 

function autobossPortal1()
    while _G.autobossPortal1 == true do
        local args = {
            [1] = workspace.Bosses.Chronus
        }
        
        game:GetService("ReplicatedStorage").Remotes.Battle:FireServer(unpack(args))
        wait(2)
     end
end

function autobossPortal2()
    while _G.autobossPortal2 == true do
        local args = {
            [1] = workspace.Bosses.Malik
        }
        
        game:GetService("ReplicatedStorage").Remotes.Battle:FireServer(unpack(args))
        wait(2)
     end
end

function autobossPortal22()
    while _G.autobossPortal22 == true do
        local args = {
            [1] = workspace.SideBosses.Armin
        }
        
        game:GetService("ReplicatedStorage").Remotes.Battle:FireServer(unpack(args))
        wait(2)
     end
end

function autobossPortal3()
    while _G.autobossPortal3 == true do
        local args = {
            [1] = workspace.Bosses.Gideon
        }
        
        game:GetService("ReplicatedStorage").Remotes.Battle:FireServer(unpack(args))
        wait(2)
     end
end

function autobossPortal4()
    while _G.autobossPortal4 == true do
        local args = {
            [1] = workspace.Bosses.Lilith
        }
        
        game:GetService("ReplicatedStorage").Remotes.Battle:FireServer(unpack(args))
        wait(2)
     end
end

function autobossPortal5()
    while _G.autobossPortal5 == true do
        local args = {
            [1] = workspace.Bosses.Morpheus
        }
        
        game:GetService("ReplicatedStorage").Remotes.Battle:FireServer(unpack(args))
        wait(2)
     end
end

function autobossPortal6()
    while _G.autobossPortal6 == true do
        local args = {
            [1] = workspace.Bosses.Raze
        }
        
        game:GetService("ReplicatedStorage").Remotes.Battle:FireServer(unpack(args))
        wait(2)
     end
end

function autoObby()
    while _G.autoObby == true do
        local teleport_table = {
            location1 = Vector3.new(-554, 282, -577), -- your desired position
        }
        
        local tween_s = game:GetService('TweenService')
        local tweeninfo = TweenInfo.new(20,Enum.EasingStyle.Linear)
        
        local lp = game.Players.LocalPlayer
        
        function bypass_teleport(v)
            if lp.Character and 
            lp.Character:FindFirstChild('HumanoidRootPart') then
                local cf = CFrame.new(v)
                local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
                a:Play()
                -- a.Completed:Wait()
                -- print('Teleporting Done!')
            end
        end
        
        bypass_teleport(teleport_table.location1)
        wait(301)
    end    
end

function deleteUselessFolder()
    local function deleteItems(itemNames)
        for _, itemName in ipairs(itemNames) do
            local item = game.Workspace:FindFirstChild(itemName)
            if item then
                item:Destroy()
                print(itemName .. " deleted successfully.")
            else
                print(itemName .. " not found.")
            end
        end
    end
    
    -- Example usage
    deleteItems({"BroadcastBoards", "Decor"})
end

function deleteUselessParts()
    local function deleteModels(modelNames)
        for _, modelName in ipairs(modelNames) do
            local deletedCount = 0
            for _, child in ipairs(game.Workspace:GetDescendants()) do
                if child:IsA("Model") and child.Name == modelName then
                    child:Destroy()
                    deletedCount = deletedCount + 1
                end
            end
            if deletedCount > 0 then
                print("Deleted " .. deletedCount .. " instances of " .. modelName .. " successfully.")
            else
                print("No instances of " .. modelName .. " found.")
            end
        end
    end
    
    -- Example usage
    deleteModels({"Lantern", "Table w/ Lantern", "Craftsperson House", "SpawnFountain", "Rarest", "Rolls", "Big Tree", "rockyframe"})    
end

function deletePortals()
    local function deleteItems(itemNames)
        for _, itemName in ipairs(itemNames) do
            local item = game.Workspace:FindFirstChild(itemName)
            if item then
                item:Destroy()
                print(itemName .. " deleted successfully.")
            else
                print(itemName .. " not found.")
            end
        end
    end
    
    -- Example usage
    deleteItems({"Portals"})
end

-- Tabs
local FarmTab = Window:MakeTab({
	Name = "AutoFarm",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local PotionsTab = Window:MakeTab({
	Name = "Potions",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local BossTab = Window:MakeTab({
	Name = "Boss",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local MiscTab = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

-- Toggles
FarmTab:AddToggle({
	Name = "AutoRoll",
	Default = false,
	Callback = function(Value)
		_G.autoRoll = Value
        autoRoll()
	end    
})

FarmTab:AddToggle({
	Name = "AutoCollectLuckPotion",
	Default = false,
	Callback = function(Value)
		_G.autocollectluckPotion = Value
        autocollectluckPotion()
	end    
})

FarmTab:AddToggle({
	Name = "AutoCollectSpeedPotion",
	Default = false,
	Callback = function(Value)
		_G.autocollectspeedPotion = Value
        autocollectspeedPotion()
	end    
})

FarmTab:AddToggle({
	Name = "AutoObby",
	Default = false,
	Callback = function(Value)
		_G.autoObby = Value
        autoObby()
	end    
})

FarmTab:AddButton({
	Name = "AutoCollectLuckPotion(Loop)",
	Callback = function() 
        autocollectluckPotionLoop()      
  	end    
})

FarmTab:AddButton({
	Name = "AutoCollectSpeedPotion(Loop)",
	Callback = function()  
        autocollectspeedPotionLoop()      
  	end    
})

MiscTab:AddLabel("Important For Auto Collect Potion!")

MiscTab:AddButton({
	Name = "DeleteUselessFolder",
	Callback = function() 
        deleteUselessFolder()      
  	end    
})

MiscTab:AddButton({
	Name = "DeleteUselessParts",
	Callback = function() 
        deleteUselessParts()      
  	end    
})

MiscTab:AddButton({
	Name = "DeletePortals",
	Callback = function() 
        deletePortals()      
  	end    
})

PotionsTab:AddToggle({
	Name = "AutoUseLuckPotion",
	Default = false,
	Callback = function(Value)
		_G.autoluckPotion = Value
        autoluckPotion()
	end    
})

PotionsTab:AddToggle({
	Name = "AutoUseSpeedPotion",
	Default = false,
	Callback = function(Value)
		_G.autospeedPotion = Value
        autospeedPotion()
	end    
})

BossTab:AddToggle({
	Name = "BossPortal1",
	Default = false,
	Callback = function(Value)
		_G.autobossPortal1 = Value
        autobossPortal1()
	end    
})

BossTab:AddToggle({
	Name = "BossPortal2",
	Default = false,
	Callback = function(Value)
		_G.autobossPortal2 = Value
        autobossPortal2()
	end    
})

BossTab:AddToggle({
	Name = "BossPortal2.1",
	Default = false,
	Callback = function(Value)
		_G.autobossPortal22 = Value
        autobossPortal22()
	end    
})

BossTab:AddToggle({
	Name = "BossPortal3",
	Default = false,
	Callback = function(Value)
		_G.autobossPortal3 = Value
        autobossPortal3()
	end    
})

BossTab:AddToggle({
	Name = "BossPortal4",
	Default = false,
	Callback = function(Value)
		_G.autobossPortal4 = Value
        autobossPortal4()
	end    
})

BossTab:AddToggle({
	Name = "BossPortal5",
	Default = false,
	Callback = function(Value)
		_G.autobossPortal5 = Value
        autobossPortal5()
	end    
})

BossTab:AddToggle({
	Name = "BossPortal6",
	Default = false,
	Callback = function(Value)
		_G.autobossPortal6 = Value
        autobossPortal6()
	end    
})

OrionLib:Init()
